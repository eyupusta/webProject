//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebProject.Models.Entity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransportSystemEntities : DbContext
    {
        public TransportSystemEntities()
            : base("name=TransportSystemEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Bus_Lines> Bus_Lines { get; set; }
        public virtual DbSet<Buses> Buses { get; set; }
        public virtual DbSet<BusLines_Buses> BusLines_Buses { get; set; }
        public virtual DbSet<BusLines_Drivers> BusLines_Drivers { get; set; }
        public virtual DbSet<BusLines_Stations> BusLines_Stations { get; set; }
        public virtual DbSet<BusLines_Times> BusLines_Times { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Drivers> Drivers { get; set; }
        public virtual DbSet<Ferries> Ferries { get; set; }
        public virtual DbSet<Ferry_Lines> Ferry_Lines { get; set; }
        public virtual DbSet<FerryLines_Drivers> FerryLines_Drivers { get; set; }
        public virtual DbSet<FerryLines_Stations> FerryLines_Stations { get; set; }
        public virtual DbSet<FerryLines_Times> FerryLines_Times { get; set; }
        public virtual DbSet<Metrobus_Lines> Metrobus_Lines { get; set; }
        public virtual DbSet<MetrobusLines_Buses> MetrobusLines_Buses { get; set; }
        public virtual DbSet<MetrobusLines_Drivers> MetrobusLines_Drivers { get; set; }
        public virtual DbSet<MetrobusLines_Stations> MetrobusLines_Stations { get; set; }
        public virtual DbSet<MetrobusLines_Times> MetrobusLines_Times { get; set; }
        public virtual DbSet<Rail_Systems> Rail_Systems { get; set; }
        public virtual DbSet<RailSystems_Drivers> RailSystems_Drivers { get; set; }
        public virtual DbSet<RailSystems_Stations> RailSystems_Stations { get; set; }
        public virtual DbSet<RailSystems_Times> RailSystems_Times { get; set; }
        public virtual DbSet<RailSystems_Transfers> RailSystems_Transfers { get; set; }
        public virtual DbSet<Stations> Stations { get; set; }
        public virtual DbSet<Times> Times { get; set; }
        public virtual DbSet<Trains> Trains { get; set; }
        public virtual DbSet<ShowBusInfoAboutBusLines> ShowBusInfoAboutBusLines { get; set; }
        public virtual DbSet<ShowBusInfoAboutMetrobusLines> ShowBusInfoAboutMetrobusLines { get; set; }
        public virtual DbSet<ShowBusLinesInfoAboutDriver> ShowBusLinesInfoAboutDriver { get; set; }
        public virtual DbSet<ShowDepartmentInfoAboutDriver> ShowDepartmentInfoAboutDriver { get; set; }
        public virtual DbSet<ShowFerryInfoAboutFerryLines> ShowFerryInfoAboutFerryLines { get; set; }
        public virtual DbSet<ShowFerryLinesInfoAboutDriver> ShowFerryLinesInfoAboutDriver { get; set; }
        public virtual DbSet<ShowMetrobusLinesInfoAboutDriver> ShowMetrobusLinesInfoAboutDriver { get; set; }
        public virtual DbSet<ShowRailSystemsInfoAboutDriver> ShowRailSystemsInfoAboutDriver { get; set; }
        public virtual DbSet<ShowStationInfoAboutBusLines> ShowStationInfoAboutBusLines { get; set; }
        public virtual DbSet<ShowStationInfoAboutFerryLines> ShowStationInfoAboutFerryLines { get; set; }
        public virtual DbSet<ShowStationInfoAboutMetrobusLines> ShowStationInfoAboutMetrobusLines { get; set; }
        public virtual DbSet<ShowStationInfoAboutRailSystems> ShowStationInfoAboutRailSystems { get; set; }
        public virtual DbSet<ShowTimeInfoAboutBusLines> ShowTimeInfoAboutBusLines { get; set; }
        public virtual DbSet<ShowTimeInfoAboutFerryLines> ShowTimeInfoAboutFerryLines { get; set; }
        public virtual DbSet<ShowTimeInfoAboutMetrobusLines> ShowTimeInfoAboutMetrobusLines { get; set; }
        public virtual DbSet<ShowTimeInfoAboutRailSystems> ShowTimeInfoAboutRailSystems { get; set; }
        public virtual DbSet<ShowTrainInfoAboutRailSystems> ShowTrainInfoAboutRailSystems { get; set; }
        public virtual DbSet<ShowTransferInfo> ShowTransferInfo { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<ShowBusInfoForBusLine_Result> ShowBusInfoForBusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowBusInfoForBusLine_Result>("ShowBusInfoForBusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowBusInfoForMetrobusLine_Result> ShowBusInfoForMetrobusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowBusInfoForMetrobusLine_Result>("ShowBusInfoForMetrobusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowBusLinesInfoForStation_Result> ShowBusLinesInfoForStation(string station)
        {
            var stationParameter = station != null ?
                new ObjectParameter("station", station) :
                new ObjectParameter("station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowBusLinesInfoForStation_Result>("ShowBusLinesInfoForStation", stationParameter);
        }
    
        public virtual ObjectResult<ShowDriverInfoForBusLine_Result> ShowDriverInfoForBusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowDriverInfoForBusLine_Result>("ShowDriverInfoForBusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowDriverInfoForDepartment_Result> ShowDriverInfoForDepartment(string department)
        {
            var departmentParameter = department != null ?
                new ObjectParameter("department", department) :
                new ObjectParameter("department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowDriverInfoForDepartment_Result>("ShowDriverInfoForDepartment", departmentParameter);
        }
    
        public virtual ObjectResult<ShowDriverInfoForFerryLine_Result> ShowDriverInfoForFerryLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowDriverInfoForFerryLine_Result>("ShowDriverInfoForFerryLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowDriverInfoForMetrobusLine_Result> ShowDriverInfoForMetrobusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowDriverInfoForMetrobusLine_Result>("ShowDriverInfoForMetrobusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowDriverInfoForRailSystem_Result> ShowDriverInfoForRailSystem(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowDriverInfoForRailSystem_Result>("ShowDriverInfoForRailSystem", line_idParameter);
        }
    
        public virtual ObjectResult<ShowFerryInfoForFerryLine_Result> ShowFerryInfoForFerryLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowFerryInfoForFerryLine_Result>("ShowFerryInfoForFerryLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowFerryLinesInfoForStation_Result> ShowFerryLinesInfoForStation(string station)
        {
            var stationParameter = station != null ?
                new ObjectParameter("station", station) :
                new ObjectParameter("station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowFerryLinesInfoForStation_Result>("ShowFerryLinesInfoForStation", stationParameter);
        }
    
        public virtual ObjectResult<ShowMetrobusLinesInfoForStation_Result> ShowMetrobusLinesInfoForStation(string station)
        {
            var stationParameter = station != null ?
                new ObjectParameter("station", station) :
                new ObjectParameter("station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowMetrobusLinesInfoForStation_Result>("ShowMetrobusLinesInfoForStation", stationParameter);
        }
    
        public virtual ObjectResult<ShowRailSystemsInfoForStation_Result> ShowRailSystemsInfoForStation(string station)
        {
            var stationParameter = station != null ?
                new ObjectParameter("station", station) :
                new ObjectParameter("station", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowRailSystemsInfoForStation_Result>("ShowRailSystemsInfoForStation", stationParameter);
        }
    
        public virtual ObjectResult<string> ShowStationInfoForBusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowStationInfoForBusLine", line_idParameter);
        }
    
        public virtual ObjectResult<string> ShowStationInfoForFerryLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowStationInfoForFerryLine", line_idParameter);
        }
    
        public virtual ObjectResult<string> ShowStationInfoForMetrobusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowStationInfoForMetrobusLine", line_idParameter);
        }
    
        public virtual ObjectResult<string> ShowStationInfoForRailSystem(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ShowStationInfoForRailSystem", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTimeInfoForBusLine_Result> ShowTimeInfoForBusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTimeInfoForBusLine_Result>("ShowTimeInfoForBusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTimeInfoForFerryLine_Result> ShowTimeInfoForFerryLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTimeInfoForFerryLine_Result>("ShowTimeInfoForFerryLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTimeInfoForMetrobusLine_Result> ShowTimeInfoForMetrobusLine(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTimeInfoForMetrobusLine_Result>("ShowTimeInfoForMetrobusLine", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTimeInfoForRailSystem_Result> ShowTimeInfoForRailSystem(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTimeInfoForRailSystem_Result>("ShowTimeInfoForRailSystem", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTrainInfoForRailSystem_Result> ShowTrainInfoForRailSystem(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTrainInfoForRailSystem_Result>("ShowTrainInfoForRailSystem", line_idParameter);
        }
    
        public virtual ObjectResult<ShowTransferInformation_Result> ShowTransferInformation(string line_id)
        {
            var line_idParameter = line_id != null ?
                new ObjectParameter("line_id", line_id) :
                new ObjectParameter("line_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowTransferInformation_Result>("ShowTransferInformation", line_idParameter);
        }
    }
}
